library(DESeq2)
library(tibble)
library(dplyr)
library(ggplot2)

# Differential Expression Analysis: ANG vs CC
res_all <- results(dds_deseq_all, contrast = c("sample", "ANG", "CC"), alpha = 0.05)
summary(res_all)

# Convert count matrix to tibble and merge with metadata
cts_all_ed <- rownames_to_column(cts_all, "X")
cts_non <- merge(mat4ed, cts_all_ed, by.x = "Row.names", by.y = "X")
cts_non <- column_to_rownames(cts_non, "Row.names")

# Create DESeq dataset and filter low counts
dds_sym <- DESeqDataSetFromMatrix(countData = cts_non, colData = sampleinfo_all, design = ~SymState)
dds_deseq_all_sym <- DESeq(dds_sym)
keep_all <- rowSums(counts(dds_deseq_all_sym) >= 30) >= 3
dds_deseq_all_sym <- dds_deseq_all_sym[keep_all, ]

# Differential Expression Analysis: Symbiotic vs Non-Symbiotic
res_all_sym <- results(dds_deseq_all_sym, contrast = c("SymState", "Symbiotic", "Non"), alpha = 0.05)
summary(res_all_sym)

# Filter for non-significant, low fold-change genes
df_sym_all <- as.data.frame(res_all)
df_res_all_01 <- df_sym_all[(df_sym_all$padj > 0.05) & (abs(df_sym_all$log2FoldChange) < 1),]
df_res_all_01 <- na.omit(df_res_all_01)
df_res_all_01 <- df_res_all_01[order(df_res_all_01$log2FoldChange, decreasing = TRUE),]
write.table(df_res_all_01, "Desq_table_ANG-CC_similar_expression_genes_p05_woMaleCC.txt", sep = "\t")

# Prepare filtered data for visualization
mat4ed <- rownames_to_column(df_res_all_01, "Row.names")
mat4ed <- select(mat4ed, -2:-7)
cts_ed <- rownames_to_column(cts_all, "VALUE")
cts_non <- merge(mat4ed, cts_ed, by.x = "Row.names", by.y = "VALUE")
cts_non <- column_to_rownames(cts_non, "Row.names")

# Perform DESeq again on filtered dataset
dds_sym <- DESeqDataSetFromMatrix(countData = cts_non, colData = sampleinfo_all, design = ~SymState)
dds_deseq_all_non <- DESeq(dds_sym)

# Variance Stabilization Transformation
vsd_all <- vst(dds_deseq_all_non)

# PCA Plot
pcaData <- plotPCA(vsd_all, intgroup = c("sample"), returnData = TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))

group_sex <- factor(sampleinfo_all$Sex)
group_sample <- factor(sampleinfo_all$sample)

pca_all <- ggplot(pcaData, aes(PC1, PC2, color = group_sample, shape = group_sex)) +
  geom_point(size = 5) +
  xlab(paste0("PC1: ", percentVar[1], "% variance")) +
  ylab(paste0("PC2: ", percentVar[2], "% variance")) +
  geom_point(aes(fill = group_sample, shape = group_sex), size = 5, color = "black") +
  theme_bw() +
  theme(axis.text = element_text(size = 12), legend.text = element_text(size = 12), legend.key.size = unit(2, "lines")) +
  scale_shape_manual(values = c(21, 24)) +
  scale_fill_manual(values = Okabe_Ito) +
  guides(fill = guide_legend(override.aes = list(color = Okabe_Ito)))

print(pca_all)

# Additional Differential Expression Analysis
res_all_sym <- results(dds_deseq_all_non, contrast = c("SymState", "Symbiotic", "Non"), alpha = 0.05)
summary(res_all_sym)

df_res_sym <- as.data.frame(res_all_sym)
df_res_sym_01 <- df_res_sym[(abs(df_res_sym$log2FoldChange) > 2) & (df_res_sym$padj < 0.01),]
df_res_sym_01 <- na.omit(df_res_sym_01)
df_res_sym_01 <- df_res_sym_01[order(df_res_sym_01$log2FoldChange, decreasing = TRUE),]

write.table(df_res_sym_01, "df_Sym_v_ALL_LFC>2.txt", sep = "\t")

# Annotation of results
df_res_all_01_ed <- rownames_to_column(df_res_sym_01, "X")
res_all_anno <- merge(df_res_all_01_ed, annos, by.x = "X", by.y = "X.gene_id")
write.table(res_all_anno, "Deseq_sym_all_anno.txt", sep = "\t")
