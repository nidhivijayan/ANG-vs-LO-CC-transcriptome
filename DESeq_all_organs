#Read output of kallisto

all<-read.delim("kallisto_all_organs.gene.counts.matrix", header = TRUE,row.names = "X")

col_order_all<-c("ANGQ3_kallisto_167752.1","ANG_Q5_kallisto_167754.1","ANGS13_kallisto_167742.1","ANGS15_kallisto_167750.1","ANGS9_kallisto_167756.1","Br_kallisto_190909.1","Br_kallisto_190914.1","Br_kallisto_190921.1","CC_kallisto_190908.1","CC_kallisto_190917.1","CC_kallisto_190920.1","CCQ3_kallisto_167753.1","CC_Q5_kallisto.1","CCS13_kallisto_167743.1","CCS15_kallisto_167751.1","Gill_kallisto_167718.1","Gill_kallisto_167732.1","Gill_kallisto_190919.1","Gills_S13_kallisto_167739.1","gills_T2_kallisto_190964.1","GillU2_kallisto_190928.1","Mant_kallisto_190853.1","Mant_kallisto_190910.1","Mant_kallisto_190922.1","Mant_kallisto_190931.1","OL_kallisto_167722.1","OL_kallisto_167728.1","OL_kallisto_167736.1","OL_kallisto_167745.1","OL_kallisto_190906.1","OL_kallisto_190935.1","Ov_kallisto_167741.1","Ov_kallisto_167749.1","Ov_kallisto_190934.1","skin_kallisto_190904.1","skin_kallisto_190912.1","skin_kallisto_190924.1","skin_kallisto_190933.1","T16_ANG_kallisto_190949.1","T16_CC_kallisto_190950.1","T21_ANG_kallisto_190952.1","T21_CC_kallisto_190953.1","T2_ANG_kallisto_190943.1","T2_CC_kallisto_190944.1","T4_ANG_kallisto_190945.1","T4_CC_kallisto_190946.1","T5_ANG_kallisto_190947.1","T5_CC_kallisto_190948.1","U2_ANG_kallisto_190929.1","U2_CC_kallisto_190930.1","U3_ANG_kallisto_190937.1","U3_CC_kallisto_190938.1")

cts_all=all[rowSums(all[])>0, ]
cts_all=ceiling(cts_all)
View(cts_all)
sampleinfo_all<-read.delim("sample_data_all.txt")

#Create Deseq object
dds_a<-DESeqDataSetFromMatrix(countData = cts_all,colData = sampleinfo_all, design=~SymState)
dds_deseq_all <- DESeq(dds_a)
keep_all <- rowSums(counts(dds_deseq_all) >= 10)>=3

dds_deseq_all <- dds_deseq_all[keep_all,]

#Normalize
vsd_all <- vst(dds_deseq_all)

# For batch effect
assay(vsd_all) <- limma::removeBatchEffect(assay(vsd_all), vsd_all$batch)

pcaData<-plotPCA(vsd_all,intgroup=c("sample"),returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
group_sex<-sampleinfo_all$Sex
group_sex<-factor(group_sex)
group_sample<-sampleinfo_all$sample
group_sample<-factor(group_sample)
pca_all<-ggplot(pcaData, aes(PC1, PC2, color=group_sample,shape=group_sex))+
  geom_point(size=5) +
  xlab(paste0("PC1: ",percentVar[1],"% variance")) +
  ylab(paste0("PC2: ",percentVar[2],"% variance")) +
  geom_point(aes(fill=group_sample,shape=group_sex),size=5,colour="black")+
  theme_bw()+theme(axis.text = element_text(size=12),legend.text = element_text(size=12),legend.key.size = unit(2,"lines"))+
  scale_shape_manual(values=c(21,24))+scale_fill_manual(values=Okabe_Ito)+
  guides(fill = guide_legend(override.aes = list(color = Okabe_Ito)))

pca_all
p1<-pca_all+ggforce::geom_mark_ellipse(aes(color = group_sample))

# To make plot with transparent background for ppts
pca_all_b=pca_all+theme(
  panel.background = element_rect(fill='transparent'),
  plot.background = element_rect(fill='transparent', color=NA),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  legend.background = element_rect(fill='transparent'),
  legend.box.background = element_rect(fill='transparent'),axis.line = element_line(color="white"),axis.text = element_text(colour = "white",size=25),axis.title = element_text(colour = "white",size=30)
)
ggsave('PCA_all_nobg.png', pca_all_b, bg='transparent')


res_all<-results(dds_deseq_all, contrast=c("SymState", "Symbiotic", "Non"),alpha=0.05)

# summarize differentially expressed stats
summary(res_all)

